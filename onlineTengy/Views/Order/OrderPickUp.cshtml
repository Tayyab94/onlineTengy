@model List<onlineTengy.Models.OrderDetailsViewModels.OrderDetailViewModel>
@using onlineTengy.Utility
@{
    ViewData["Title"] = "ManageOrder";
}



<br />


<form method="get">
    <div style="height:150px; " class="bg-light container">
        <h3 class="text-info text-center"> Search Criteria</h3>
        <div class="col-12">

            <div class="row" style="padding-top:10px">
                <div class="col-2">
                    Order Number:
                </div><div class="col-3">
                    @Html.Editor("searchOrder", new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="col-2">

                </div>

                <div class="col-2">
                    Phone No:
                </div><div class="col-3">

                    @Html.Editor("searcPhone", new { htmlAttributes = new { @id = "phone" ,@class = "form-control" } })
                </div>
            </div>


            <div class="row" style="padding-top:10px">
                <div class="col-2">
                    Email:
                </div><div class="col-3">
                    @Html.Editor("searchEmail", new { htmlAttributes = new { @id = "email", @class = "form-control" }})
                </div>
                <div class="col-2">

                </div>

                <div class="col-2">

                </div><div class="col-3">
                    <button type="submit" name="submit" value="Search" class="btn btn-primary form-control">
                        <i class="fas fa-search"></i> Search
                    </button>
                </div>
            </div>
        </div>
    </div>
    <div class="container row">
        <br />
        <h2>PickUp Order</h2>
        <hr />
    </div>

    @if (Model.Count > 0)
    {
        <div class="container" style="margin-top:9px;">

            @foreach (var item in Model)
            {
                @*<div class="container row">
                        <div class="col-10">
                            @await Html.PartialAsync("_IndividualOrderDetails",item)
                        </div>
                    </div>*@
                @*<div class="row">
                        <div class="col-10">

                            @await Html.PartialAsync("_IndividualOrderDetails", item)
                        </div>
                        <div class="col-2">

                        </div>
                    </div>*@

                <div class="row">
                    <div class="col-10 col-md-9 col-sm-12">
                        @await Html.PartialAsync("_IndividualOrderDetails", item)
                    </div>
                    <div class="col-2 col-md-3 col-sm-12 col-">
                        @if (item.OrderHeader.Status == SD.StatusReady)
                        {
                            <button type="submit" asp-action="OrderPickUpDetails" asp-route-id="@item.OrderHeader.Id" class="btn btn-primary form-control">
                                <i class="fas fa-thumbs-up"></i> Order PickUp
                            </button>
                            @*<button type="button" data-id="@item.OrderHeader.Id" data-value="Being Process" class="btn btn-primary form-control">
                                    <i class="fas fa-check"></i> Start Cooking
                                </button>*@
                        }

                    </div>
                </div>
            }

        </div>
    }
    else
    {
        <div class="text-center text-info">
            No order's is available Now.
        </div>
    }

</form>

@section scripts{
    <script src="~/JqueryScript/Typeahead.js"></script>

    <script>
        $(document).ready(function () {

            var emailSrc = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace,
                queryTokenizer: Bloodhound.tokenizers.whitespace,

                remote: {
                    url: '/API/Users?type=email&query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#email').typeahead({ highlight: true, minlenght: 3 },
                {

                    display: 'email',
                    source: emailSrc
                }
            );



            //Typeahead For Phone No
            var phoneSrc = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace,
                queryTokenizer: Bloodhound.tokenizers.whitespace,

                remote: {
                    url: '/API/Users?type=phone&query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#phone').typeahead({ highlight: true, minlenght: 3 },
                {

                    display: 'phone',
                    source: phoneSrc
                }
            );


        });
    </script>
}